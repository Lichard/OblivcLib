#include<obliv.oh>
#include"testStack.h"
#include<stdio.h>
#include"ocStack.oh"

void hamming(void* args)
{
    protocolIO *io = args;
    obliv bool b1[80];
	obliv bool b2[80];
    bool rb;
	
	int i,j;
	for (i=0; i<10; i++){
		for(j=0; j<8; j++){
			b1[i*8+j] = feedOblivBool((bool)(io->data[i] & (1<<j)), 1);
			b2[i*8+j] = feedOblivBool((bool)(io->data[i] & (1<<j)), 2);
		}
	}
	
	ocStack* os1 = ocStackFromList(b1, 10, 8);
    ocStack* os2 = ocStackNew(3, 8);
	for(i=9; i>=0; i--){
		push(os2, &b2[i*8]);
	}
	
	int ct;
	obliv int count=0;
	obliv bool a1[8];
	obliv bool a2[8];
	obliv bool match;
	for(i=0; i<10; i++){//per character
		pop(a1, os1);
		pop(a2, os2);
		match = true;
		for(j=0; j<8; j++){//per bit
			obliv if(a1[j]!=a2[j])
				match = false;
		}

		obliv if(!match)
			count++;
	}
	revealOblivInt(&ct, count, 0);
	io->hammingDist = ct;
	ocStackRelease(os1);
	ocStackRelease(os2);
}
