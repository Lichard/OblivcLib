#pragma once
typedef struct ocStack 
{
    int level;
	int itemSize;//size in bits
    struct ocStack *next;
    obliv char head; //0-4
    obliv bool *buffer;
    int cap; //User set size limit
    int maxSize; //max possible blocks
	char pushCount; //num times cond push called
	char popCount; //num times cond pop called
}ocStack;

ocStack* ocStackNew(int n, int itemSize);
ocStack* ocStackFromList(bool data[], int lim, int itemSize);
void capLength(frozen ocStack *s, int cap);
void peek(obliv bool* dest, frozen ocStack *s) obliv;
void pop(obliv bool* dest, frozen ocStack *s) obliv;
void modifyTop(frozen ocStack *s, obliv bool* b) obliv;
void push(frozen ocStack *s, obliv bool* b) obliv;
void ocStackRelease(frozen ocStack* s);
